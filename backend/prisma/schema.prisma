generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  username         String    @unique @db.VarChar(255)
  secret           String    @db.VarChar(255)
  token            String?   @unique @db.VarChar(255) 
  recovery_phrase  String?   @unique @db.VarChar(255) 
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime  @updatedAt @db.Timestamptz(6) 
}

model Cinema {
  id              Int              @id @default(autoincrement()) 
  name            String           @db.VarChar(255)             
  color           String           @db.VarChar(7)              
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  halls           Hall[]
}

model Hall {
  id          Int             @id @default(autoincrement())        
  created_at  DateTime        @default(now()) @db.Timestamptz(6) 
  cinema_id   Int                                                  
  name        String          @db.VarChar(255)                    
  rows        Int
  places      Int
  seats       Seat[]                                              

  cinema      Cinema          @relation(fields: [cinema_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Seat {
  id              Int             @id @default(autoincrement())  
  hall_id         Int                                                 
  seat_type_id    Int
  row             Int
  place           Int
  x               Int                                                  
  y               Int                                                  
  width           Int
  height          Int
  rotation        Float
  status          SeatStatus      @default(VACANT)     
  last_updated    DateTime        @default(now()) @db.Timestamptz(6)

  hall            Hall?           @relation(fields: [hall_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  seat_type       SeatType        @relation(fields: [seat_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model SeatType {
  id              Int          @id @default(autoincrement())
  name            String
  seats           Seat[]
}

enum SeatStatus {
  VACANT         
  OCCUPIED       
}
